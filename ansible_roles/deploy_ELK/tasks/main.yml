---
# tasks file for deploy_ELK
- name: Upgrade all apt packages
  apt: upgrade=dist force_apt_get=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
- name: Check if a reboot is needed for Debian and Ubuntu boxes
  register: reboot_required_file
  stat: path=/var/run/reboot-required get_md5=no
- name: Reboot the Debian or Ubuntu server
  reboot:
        msg: "Reboot initiated by Ansible due to kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
  when: reboot_required_file.stat.exists

# Add-on tools
- name: Installing Visualizing and provisioning tools 
  package:
      name: "{{ item }}"
      state: latest
  loop:
    - nmon 
    - glances
    - iftop 
    - atop 
    - htop 
    - dstat 
    - smem

- name: Import GPG key
  shell: |
       wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
       apt-get install apt-transport-https
- name: Add Elasticsearch repository
  shell: |
        echo "deb https://artifacts.elastic.co/packages/8.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-8.x.list
- name: Update package cache
  apt:
     update_cache: yes

- name: Install ELK stack
  apt:
       name: "{{ item }}"
       state: latest
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  loop: "{{ ELK }}"
- name: Installing NGINX Webserver
  apt:
      name: nginx
      state: latest
      
# Configuring ELK 
- name: Configuring Elasticsearch conf file {Cluster name}
  lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      regex: '^#cluster.name'
      line: 'cluster.name: Cluster_ansi'
- name: Configuring Elasticsearch conf file {xpack.monitoring.collection}
  lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      regex: '^#xpack.monitoring.collection.enabled:'
      line: 'xpack.monitoring.collection.enabled: true'
- name: Configuring Elasticsearch conf file {xpack.monitoring.elasticsearch.collection}
  lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      regex: '^#xpack.monitoring.elasticsearch.collection.enabled:'
      line: 'xpack.monitoring.elasticsearch.collection.enabled: true'
- name: Configuring Elasticsearch conf file {node.name}
  lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      regex: '^#node.name:'
      line: 'node.name: node-1'
- name: Configuring Elasticsearch conf file {network.host}
  lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      regex: '^#network.host:'
      line: 'network.host: 0.0.0.0'
- name: Configuring Elasticsearch conf file {http.port}
  lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      regex: '^#http.port:'
      line: 'http.port: 9200'
- name: Configuring Elasticsearch conf file {transport.host} Allowing other Hosts that are not in same network to join the cluster 
  lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      regex: '^#transport.host:'
      line: 'transport.host: 0.0.0.0'
  notify: restart_elasticsearch
- name: Appending single-node parameter
  lineinfile:
      dest: /etc/elasticsearch/elasticsearch.yml
      line: "discovery.type: single-node"
- name: Removing the master-nodes list
  lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      regex: 'cluster.initial_master_nodes'
      line: '#cluster.initial_master_nodes'
      


- name: Configuring Kibana conf file {server.port}
  lineinfile:
      path: /etc/kibana/kibana.yml
      regex: '^#server.port:'
      line: 'server.port: 5601'
- name: Configuring Kibana conf file {server.host}
  lineinfile:
      path: /etc/kibana/kibana.yml
      regex: '^#server.host:'
      line: 'server.host: 0.0.0.0'
- name: Configuring Kibana conf file {server.publicBaseUrl}
  lineinfile:
      path: /etc/kibana/kibana.yml
      regex: '^#server.publicBaseUrl:'
      line: 'server.publicBaseUrl: "https://ansi-elk.duckdns.org"'
- name: Configuring Kibana conf file {server.name}
  lineinfile:
      path: /etc/kibana/kibana.yml
      regex: '^#server.name:'
      line: 'server.name: "ansi-elk"'
- name: Configuring Kibana conf file {elasticsearch.hosts}
  lineinfile:
      path: /etc/kibana/kibana.yml
      regex: '^#elasticsearch.hosts:'
      line: 'elasticsearch.hosts: ["http://localhost:9200"]'
  notify: restart_kibana
- name: "**************** Manual setup you have to do ******************"
  debug:
       msg: 
          - "Now you have to make these commands : "
          - "Generate token from here => sudo /usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token --scope kibana"
          - "Get the verificationcode from here => sudo /usr/share/kibana/bin/kibana-verification-code"
          - "Reset password for elastic user from here =>  sudo /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic"
# Directory layout
